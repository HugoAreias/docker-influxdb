### Welcome to the InfluxDB configuration file.

# Once every 24 hours InfluxDB will report anonymous data to m.influxdb.com
# The data includes raft id (random 8 bytes), os, arch, version, and metadata.
# We don't track ip addresses of servers reporting. This is only used
# to track the number of instances running and the versions, which
# is very helpful for us.
# Change this option to true to disable reporting.
# INFLUXDB_REPORTING_DISABLED
reporting-disabled = true

# The bind address to use for the RPC service for backup and restore.
# INFLUXDB_BIND_ADDRESS
bind-address = ":8088"

###
### [meta]
###
### Controls the parameters for the Raft consensus group that stores metadata
### about the InfluxDB cluster.
### This section controls parameters for InfluxDBâ€™s metastore, which stores information on users,
### databases, retention policies, shards, and continuous queries.
###

[meta]
  # Where the metadata/raft database is stored
  # INFLUXDB_META_DIR
  dir = "/var/lib/influxdb/meta"

  # INFLUXDB_META_RETENTION_AUTOCREATE
  retention-autocreate = true

  # If log messages are printed for the meta service
  # INFLUXDB_META_LOGGING_ENABLED
  logging-enabled = true

###
### [data]
###
### Controls where the actual shard data for InfluxDB lives and how it is
### flushed from the WAL. "dir" may need to be changed to a suitable place
### for your system, but the WAL settings are an advanced configuration. The
### defaults should work for most systems.
###

[data]
  dir = "/var/lib/influxdb/data"

  # These are the WAL (write ahead log) settings for the storage engine
  # The temporary cache for recently written points
  # To reduce the frequency with which the permanent storage files are accessed
  # INFLUXDB_DATA_DIR
  wal-dir = "/var/lib/influxdb/wal"

  # Toggles logging of additional debug information within the TSM engine and WAL.
  # INFLUXDB_DATA_TRACE_LOGGING_ENABLED
  trace-logging-enabled = false

  # Whether queries should be logged before execution. Very useful for troubleshooting, but will
  # log any sensitive data contained within a query.
  # INFLUXDB_DATA_QUERY_LOG_ENABLED
  query-log-enabled = true

  # Settings for the TSM engine

  # CacheMaxMemorySize is the maximum size a shard's cache can
  # reach before it starts rejecting writes.
  # INFLUXDB_DATA_CACHE_MAX_MEMORY_SIZE
  # cache-max-memory-size = 1048576000

  # CacheSnapshotMemorySize is the size at which the engine will
  # snapshot the cache and write it to a TSM file, freeing up memory
  # INFLUXDB_DATA_CACHE_SNAPSHOT_MEMORY_SIZE
  # cache-snapshot-memory-size = 26214400

  # CacheSnapshotWriteColdDuration is the length of time at
  # which the engine will snapshot the cache and write it to
  # a new TSM file if the shard hasn't received writes or deletes
  # INFLUXDB_DATA_CACHE_SNAPSHOT_WRITE_COLD_DURATION
  # cache-snapshot-write-cold-duration = "10m0s"

  # CompactFullWriteColdDuration is the duration at which the engine
  # will compact all TSM files in a shard if it hasn't received a
  # write or delete
  # INFLUXDB_DATA_COMPACT_FULL_WRITE_COLD_DURATION
  # compact-full-write-cold-duration = "4h0m0s"

  # The maximum number of series allowed per database. The default setting is one million.
  # Change the setting to 0 to allow an unlimited number of series per database.
  # INFLUXDB_DATA_MAX_SERIES_PER_DATABASE
  max-series-per-database = 0

  # The maximum number of tag values allowed per tag key. The default setting is 100000.
  # Change the setting to 0 to allow an unlimited number of tag values per tag key.
  # INFLUXDB_DATA_MAX_VALUES_PER_TAG
  # max-values-per-tag = 100000

[coordinator]

  # The time within which a write request must complete on the cluster.
  # INFLUXDB_COORDINATOR_WRITE_TIMEOUT
  write-timeout = "10s"
  
  # The maximum number of running queries allowed on your instance.
  # The default setting (0) allows for an unlimited number of queries.
  # INFLUXDB_COORDINATOR_MAX_CONCURRENT_QUERIES
  max-concurrent-queries = 0

  # The maximum time for which a query can run on your instance before InfluxDB kills the query.
  # The default setting (0) allows queries to run with no time restrictions.
  # This setting is a duration.
  # INFLUXDB_COORDINATOR_QUERY_TIMEOUT
  query-timeout = "30s"

  # The maximum time a query can run after which InfluxDB logs the query
  # with a Detected slow query message.
  # The default setting ("0") will never tell InfluxDB to log the query.
  # This setting is a duration.
  # INFLUXDB_COORDINATOR_LOG_QUERIES_AFTER
  log-queries-after = "10s"

  # The maximum number of points that a SELECT statement can process.
  # The default setting (0) allows the SELECT statement to process an unlimited number of points.
  # INFLUXDB_COORDINATOR_MAX_SELECT_POINT
  # max-select-point = 0

  # max-select-series = 0
  # The maximum number of series that a SELECT statement can process.
  # The default setting (0) allows the SELECT statement to process an unlimited number of series.
  # INFLUXDB_COORDINATOR_MAX_SELECT_SERIES

  # The maximum number of GROUP BY time() buckets that a query can process.
  # The default setting (0) allows a query to process an unlimited number of buckets.
  # INFLUXDB_COORDINATOR_MAX_SELECT_BUCKETS
  # max-select-buckets = 0

###
### [retention]
###
### Controls the enforcement of retention policies for evicting old data.
###

[retention]
  # Set to false to prevent InfluxDB from enforcing retention policies.
  # INFLUXDB_RETENTION_ENABLED
  enabled = true

  # The rate at which InfluxDB checks to enforce a retention policy.
  # INFLUXDB_RETENTION_CHECK_INTERVAL
  check-interval = "30m0s"

###
### [shard-precreation]
###
### Controls the precreation of shards, so they are available before data arrives.
### Only shards that, after creation, will have both a start- and end-time in the
### future, will ever be created. Shards are never precreated that would be wholly
### or partially in the past.

[shard-precreation]
  # INFLUXDB_SHARD_PRECREATION_ENABLED
  enabled = true

  # INFLUXDB_SHARD_PRECREATION_CHECK_INTERVAL
  check-interval = "10m0s"

  # The maximum period in the future for which InfluxDB precreates shards.
  # The 30m default should work for most systems.
  # Increasing this setting too far in the future can cause inefficiencies.
  # INFLUXDB_SHARD_PRECREATION_ADVANCE_PERIOD
  advance-period = "30m0s"

###
### Controls the system self-monitoring, statistics and diagnostics.
###
### The internal database for monitoring data is created automatically if
### if it does not already exist. The target retention within this database
### is called 'monitor' and is also created with a retention period of 7 days
### and a replication factor of 1, if it does not exist. In all cases the
### this retention policy is configured as the default for the database.

[monitor]
  # Set to false to disable recording statistics internally.
  # If set to false it will make it substantially more difficult to diagnose
  # issues with your installation.
  # INFLUXDB_MONITOR_STORE_ENABLED
  store-enabled = true

  # The destination database for recorded statistics.
  # INFLUXDB_MONITOR_STORE_DATABASE
  store-database = "_internal"

  # The interval at which InfluxDB records statistics.
  # INFLUXDB_MONITOR_STORE_INTERVAL
  store-interval = "10s"

###
### [admin]
###
### Controls the availability of the built-in, web-based admin interface. If HTTPS is
### enabled for the admin interface, HTTPS must also be enabled on the [http] service.
### The Admin UI is deprecated as of InfluxDB 1.2.
###

[admin]
  # Set to true to enable the admin interface.
  # INFLUXDB_ADMIN_ENABLED
  enabled = false

  # The port used by the admin interface.
  # INFLUXDB_ADMIN_BIND_ADDRESS
  # bind-address = ":8083"

  # Set to true to enable HTTPS for the admin interface.
  # INFLUXDB_ADMIN_HTTPS_ENABLED
  # https-enabled = false

  # The path of the certificate file.
  # INFLUXDB_ADMIN_HTTPS_CERTIFICATE
  # https-certificate = "/etc/ssl/influxdb.pem"

###
### [http]
###
### Controls how the HTTP endpoints are configured. These are the primary
### mechanism for getting data into and out of InfluxDB.
###

[http]
  # Set to false to disable HTTP. Note that the InfluxDB command line interface (CLI)
  # connects to the database using the HTTP API.
  # INFLUXDB_HTTP_ENABLED
  enabled = true

  # The port used by the HTTP API.
  # INFLUXDB_HTTP_BIND_ADDRESS
  bind-address = ":8086"

  # Set to true to require authentication.
  # INFLUXDB_HTTP_AUTH_ENABLED
  auth-enabled = false

  # Realm is the JWT realm used by the http endpoint.
  # INFLUXDB_HTTP_REALM
  # realm = "InfluxDB"

  # Set to false to disable logging.
  # INFLUXDB_HTTP_LOG_ENABLED
  log-enabled = true

  # Set to true to enable logging for the write payload.
  # If set to true, this will duplicate every write statement in the logs
  # and is thus not recommended for general use.
  # INFLUXDB_HTTP_WRITE_TRACING
  write-tracing = false

  # Determines whether the pprof endpoint is enabled.
  # This endpoint is used for troubleshooting and monitoring.
  # INFLUXDB_HTTP_PPROF_ENABLED
  pprof-enabled = false

  # Set to true to enable HTTPS.
  # INFLUXDB_HTTP_HTTPS_ENABLED
  https-enabled = false

  # The path of the certificate file.
  # INFLUXDB_HTTP_HTTPS_CERTIFICATE
  # https-certificate = "/etc/ssl/influxdb.pem"

  # The separate private key location. If only the https-certificate is specified,
  # the httpd service will try to load the private key from the https-certificate file.
  # If a separate https-private-key file is specified,
  # the httpd service will load the private key from the https-private-key file.
  # INFLUXDB_HTTP_HTTPS_PRIVATE_KEY
  # https-private-key = ""

  # The shared secret used for JWT signing.
  # INFLUXDB_HTTP_SHARED_SECRET
  # shared-secret = ""

  # Limits the number of rows that the system can return in a non-chunked query.
  # The default setting (0) allows for an unlimited number of rows.
  # InfluxDB includes a "partial":true tag in the response body if query results
  # exceed the max-row-limit setting.
  # INFLUXDB_HTTP_MAX_CONNECTION_LIMIT
  max-row-limit = 0

  # Limit the number of connections for the http service. 0 is unlimited.
  # INFLUXDB_HTTP_MAX_CONNECTION_LIMIT
  # max-connection-limit = 0

  # Set to true to enable http service over unix domain socket.
  # INFLUXDB_HTTP_UNIX_SOCKET_ENABLED
  unix-socket-enabled = false

  # The path of the unix domain socket.
  # INFLUXDB_HTTP_UNIX_BIND_SOCKET
  # bind-socket = "/var/run/influxdb.sock"

###
### [subscriber]
###
### This section controls how Kapacitor will receive data.
###

[subscriber]

  # Set to false to disable the subscriber service.
  # INFLUXDB_SUBSCRIBER_ENABLED
  enabled = false
  
  # Controls how long an http request for the subscriber service will run before it times out.
  # INFLUXDB_SUBSCRIBER_HTTP_TIMEOUT
  # http-timeout = "30s"
  
  # Allows insecure HTTPS connections to subscribers.
  # This is useful when testing with self-signed certificates.
  # INFLUXDB_SUBSCRIBER_INSECURE_SKIP_VERIFY
  # insecure-skip-verify = false
  
  # The path to the PEM encoded CA certs file.
  # If the empty string, the default system certs will be used.
  # INFLUXDB_SUBSCRIBER_CA_CERTS
  # ca-certs = ""
  
  # The number of writer goroutines processing the write channel.
  # INFLUXDB_SUBSCRIBER_WRITE_CONCURRENCY
  # write-concurrency = 40
  
  # The number of in-flight writes buffered in the write channel.
  # INFLUXDB_SUBSCRIBER_WRITE_BUFFER_SIZE
  # write-buffer-size = 1000

###
### [[graphite]]
###
### Controls one or many listeners for Graphite data.
###

[[graphite]]

  # Set to true to enable Graphite input.
  # INFLUXDB_GRAPHITE_0_ENABLED
  enabled = false

  # The name of the database that you want to write to.
  # INFLUXDB_GRAPHITE_0_DATABASE
  # database = "graphitedb"

  # The relevant retention policy. An empty string is equivalent to the
  # databaseâ€™s DEFAULT retention policy.
  # INFLUXDB_GRAPHITE_0_RETENTION_POLICY
  # retention-policy = ""

  # The default port.
  # INFLUXDB_GRAPHITE_0_BIND_ADDRESS
  # bind-address = ":2003"

  # Set to tcp or udp.
  # INFLUXDB_GRAPHITE_PROTOCOL
  # protocol = "tcp"

  # The number of nodes that must confirm the write.
  # If the requirement is not met the return value will be either partial write
  # if some points in the batch fail or write failure if all points in the batch fail.
  # INFLUXDB_GRAPHITE_CONSISTENCY_LEVEL
  # consistency-level = "one"

  ### The next three options control how batching works.
  ### You should have this enabled otherwise you could get dropped metrics or poor performance.
  ### Batching will buffer points in memory if you have many coming in.

  # The input will flush if this many points get buffered.
  # INFLUXDB_GRAPHITE_BATCH_SIZE
  # batch-size = 5000

  # The number of batches that may be pending in memory.
  # INFLUXDB_GRAPHITE_BATCH_PENDING
  # batch-pending = 10

  # The input will flush at least this often even if it hasnâ€™t reached the configured batch-size.
  # INFLUXDB_GRAPHITE_BATCH_TIMEOUT
  # batch-timeout = "1s"

  # UDP Read buffer size, 0 means OS default. UDP listener will fail if set above OS max.
  # INFLUXDB_GRAPHITE_UDP_READ_BUFFER
  # udp-read-buffer = 0

  # This string joins multiple matching 'measurement' values providing more
  # control over the final measurement name.
  # INFLUXDB_GRAPHITE_SEPARATOR
  # separator = "."

###
### [collectd]
###
### Controls one or many listeners for collectd data.
###

[[collectd]]
  # Set to true to enable collectd writes.
  # INFLUXDB_COLLECTD_ENABLED
  enabled = false

  # The port.
  # INFLUXDB_COLLECTD_BIND_ADDRESS
  # bind-address = ":25826"

  # The name of the database that you want to write to. This defaults to collectd.
  # INFLUXDB_COLLECTD_DATABASE
  # database = "collectd"

  # The relevant retention policy.
  # An empty string is equivalent to the databaseâ€™s DEFAULT retention policy.
  # INFLUXDB_COLLECTD_RETENTION_POLICY
  # retention-policy = ""

  # The collectd service supports either scanning a directory for multiple types db files,
  # or specifying a single db file. A sample types.db file can be found here.
  # INFLUXDB_COLLECTD_TYPESDB
  # typesdb = "/usr/share/collectd/types.db"

  # INFLUXDB_COLLECTD_SECURITY_LEVEL
  # security-level = "none"

  # INFLUXDB_COLLECTD_AUTH_FILE
  # auth-file = "/etc/collectd/auth_file"

  ### The next three options control how batching works.
  ### You should have this enabled otherwise you could get dropped metrics or poor performance.
  ### Batching will buffer points in memory if you have many coming in.

  # The input will flush if this many points get buffered.
  # INFLUXDB_COLLECTD_BATCH_SIZE
  # batch-size = 5000

  # The number of batches that may be pending in memory.
  # INFLUXDB_COLLECTD_BATCH_PENDING
  # batch-pending = 10

  # The input will flush at least this often even if it hasnâ€™t reached the configured batch-size.
  # INFLUXDB_COLLECTD_BATCH_TIMEOUT
  # batch-timeout = "10s"

  # UDP Read buffer size, 0 means OS default. UDP listener will fail if set above OS max.
  # INFLUXDB_COLLECTD_READ_BUFFER
  # read-buffer = 0

###
### [opentsdb]
###
### Controls one or many listeners for OpenTSDB data.
###

[[opentsdb]]
  # Set to true to enable openTSDB writes.
  # INFLUXDB_OPENTSDB_0_ENABLED
  enabled = false

  # The default port.
  # INFLUXDB_OPENTSDB_BIND_ADDRESS
  # bind-address = ":4242"

  # The name of the database that you want to write to.
  # If the database does not exist, it will be created automatically when the input is initialized.
  # INFLUXDB_OPENTSDB_DATABASE
  # database = "opentsdb"

  # The relevant retention policy.
  # An empty string is equivalent to the databaseâ€™s DEFAULT retention policy.
  # INFLUXDB_OPENTSDB_RETENTION_POLICY
  # retention-policy = ""

  # Sets the write consistency level: any, one, quorum, or all for writes.
  # INFLUXDB_OPENTSDB_CONSISTENCY_LEVEL
  # consistency-level = "one"

  # INFLUXDB_OPENTSDB_TLS_ENABLED
  # tls-enabled = false

  # INFLUXDB_OPENTSDB_CERTIFICATE
  # certificate= "/etc/ssl/influxdb.pem"

  # Log an error for every malformed point.
  # INFLUXDB_OPENTSDB_0_LOG_POINT_ERRORS
  # log-point-errors = true # Log an error for every malformed point.

  ### The next three options control how batching works.
  ### You should have this enabled otherwise you could get dropped metrics or poor performance.
  ### Only points metrics received over the telnet protocol undergo batching.

  # The input will flush if this many points get buffered.
  # INFLUXDB_OPENTSDB_BATCH_SIZE
  # batch-size = 1000

  # The number of batches that may be pending in memory.
  # INFLUXDB_OPENTSDB_BATCH_PENDING
  # batch-pending = 5

  # The input will flush at least this often even if it hasnâ€™t reached the configured batch-size.
  # INFLUXDB_OPENTSDB_BATCH_TIMEOUT
  # batch-timeout = "1s"

###
### [[udp]]
###
### Controls the listeners for InfluxDB line protocol data via UDP.
###

[[udp]]
  # Set to true to enable writes over UDP.
  # INFLUXDB_UDP_ENABLED
  enabled = false

  # An empty string is equivalent to 0.0.0.0.
  # INFLUXDB_UDP_BIND_ADDRESS
  # bind-address = ":4444"

  # The name of the database that you want to write to.
  # INFLUXDB_UDP_DATABASE
  # database = "udpdb"

  # The relevant retention policy for your data.
  # An empty string is equivalent to the databaseâ€™s DEFAULT retention policy.
  # INFLUXDB_UDP_RETENTION_POLICY
  # retention-policy = ""

  ### The next three options control how batching works.
  ### You should have this enabled otherwise you could get dropped metrics or poor performance.
  ### Batching will buffer points in memory if you have many coming in.

  # The input will flush if this many points get buffered.
  # INFLUXDB_UDP_0_BATCH_SIZE
  # batch-size = 5000
  
  # The number of batches that may be pending in memory.
  # INFLUXDB_UDP_0_BATCH_PENDING
  # batch-pending = 10
  
  # The input will flush at least this often even if it hasnâ€™t reached the configured batch-size.
  # INFLUXDB_UDP_BATCH_TIMEOUT
  # batch-timeout = "1s"
  
  # UDP read buffer size, 0 means OS default. UDP listener will fail if set above OS max.
  # INFLUXDB_UDP_BATCH_SIZE
  # read-buffer = 0

  # Time precision used when decoding time values.
  # Defaults to nanoseconds which is the default of the database.
  # INFLUXDB_UDP_PRECISION
  # precision = ""

###
### [continuous_queries]
###
### Controls how continuous queries are run within InfluxDB.
### CQs are automated batches of queries that execute over recent time intervals.
###

[continuous_queries]
  # Set to false to disable CQs.
  # INFLUXDB_CONTINUOUS_QUERIES_ENABLED
  enabled = true

  # Set to false to disable logging for CQ events.
  # INFLUXDB_CONTINUOUS_QUERIES_LOG_ENABLED
  log-enabled = true

  # The interval at which InfluxDB checks to see if a CQ needs to run.
  # Set this option to the lowest interval at which your CQs run.
  # For example, if your most frequent CQ runs every minute, set run-interval to 1m.
  # INFLUXDB_CONTINUOUS_QUERIES_RUN_INTERVAL
  # run-interval = "1s"
